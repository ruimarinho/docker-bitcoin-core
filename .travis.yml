before_install:
  - curl -sf https://test.docker.com | sh
  - docker --version

dist: bionic

after_script:

before_script:
  - LATEST_BITCOIN_MAJOR_VERSION=$(ls  | grep 0 | sort -n | tail -n 1)

env:
  global:
    - DOCKER_CLI_EXPERIMENTAL=enabled
    - PLATFORMS=linux/amd64,linux/arm/v7,linux/arm64
  matrix:
    - BITCOIN_VERSION=0.21
    - BITCOIN_VERSION=0.21/alpine
    - BITCOIN_VERSION=0.20
    - BITCOIN_VERSION=0.20/alpine
    - BITCOIN_VERSION=0.19
    - BITCOIN_VERSION=0.19/alpine
    - BITCOIN_VERSION=0.18
    - BITCOIN_VERSION=0.18/alpine
    - BITCOIN_VERSION=0.17
    - BITCOIN_VERSION=0.17/alpine
    - BITCOIN_VERSION=0.16
    - BITCOIN_VERSION=0.16/alpine
    - BITCOIN_VERSION=0.13
    - BITCOIN_VERSION=0.13/alpine
    - BITCOIN_VERSION=0.12
    - BITCOIN_VERSION=0.12/alpine
    - BITCOIN_VERSION=0.11
    - BITCOIN_VERSION=0.11/alpine

language: shell

script:
  - |
    function version { echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'; }

    TRAVIS_TAG_MAJOR_MINOR=$(echo $TRAVIS_TAG | cut -c -4)
    PUSH=false
    REPO=ruimarinho/bitcoin-core
    TAGS=()

    if [ -n "$TRAVIS_TAG" ]; then
      PUSH=true

      if [[ ${BITCOIN_VERSION} == *"alpine"* ]]; then
        TAGS+=("$REPO:$TRAVIS_TAG-alpine")
      else
        TAGS+=("$REPO:$TRAVIS_TAG")
      fi

      if [ $(version ${TRAVIS_TAG_MAJOR_MINOR}) -gt $(version ${BITCOIN_VERSION}) ]; then
        echo "Skipping build of base image $BITCOIN_VERSION/ as ${TRAVIS_TAG} is targeted at ${TRAVIS_TAG_MAJOR_MINOR}/"
        exit 0
      fi
    else
      TAGS+=("$REPO:${BITCOIN_VERSION/\//-}")
    fi

    if [ "$TRAVIS_BRANCH" == "master" ]; then
      PUSH=true

      if [ $(version ${BITCOIN_VERSION}) -ge $(version $LATEST_BITCOIN_MAJOR_VERSION) ] && [[ ${BITCOIN_VERSION} != *"alpine"* ]]; then
        TAGS+=("$REPO:latest")
      fi
    fi

    echo ">>> Latest bitcoin version found was $LATEST_BITCOIN_MAJOR_VERSION"
    echo ">>> Docker build tags are $(printf "%s" "${TAGS[@]/#/ --tag }" )"
    echo ">>> Docker image will$(if [ "${PUSH}" = false ]; then echo " NOT"; fi) be pushed to registry"

    # Login to Docker Hub if image will be pushed.
    if [ "${PUSH}" = true ]; then
      echo "$DOCKER_HUB_PASSWORD" | docker login -u ruimarinho --password-stdin
    fi

    if [ $(version ${BITCOIN_VERSION}) -ge $(version $LATEST_BITCOIN_MAJOR_VERSION) ] && [[ ${BITCOIN_VERSION} != *"alpine"* ]]; then
        echo ">>> Using docker buildx"

        docker run --privileged linuxkit/binfmt:v0.8
        docker buildx create --use
        docker buildx build \
          --platform "$PLATFORMS" \
          $(printf "%s" "${TAGS[@]/#/ --tag }" ) \
          ${BITCOIN_VERSION} \
          $(if [ "${PUSH}" = true ]; then echo "--push"; fi)

        for TAG in "${TAGS[@]}"; do
          docker buildx imagetools inspect "${TAG}"
        done
    else
      echo ">>> Using docker build"

      docker build $(printf "%s" "${TAGS[@]/#/ --tag }" ) ${BITCOIN_VERSION}

      for TAG in "${TAGS[@]}"; do
        if [ "${PUSH}" = true ]; then
          docker push "${TAG}"
        fi
        docker inspect "${TAG}"
      done
    fi

